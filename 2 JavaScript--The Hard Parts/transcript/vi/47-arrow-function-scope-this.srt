1
00:00:00,003 --> 00:00:03,911
>> Will Sentance: Tôi nghĩ đây là phạm vi của khoảnh khắc tốt đẹp để xem

2
00:00:03,911 --> 00:00:09,500
cách ngày càng tiêu chuẩn hơn để làm điều này ngày nay.

3
00:00:09,500 --> 00:00:15,400
Điều đó sử dụng tính năng này của một cách xác định hoặc khai báo mới hoặc

4
00:00:15,400 --> 00:00:20,851
lưu các hàm trong JavaScript mà chúng ta đã thấy ngày hôm qua.

5
00:00:20,851 --> 00:00:23,630
Đó là kiểu hàm mũi tên của chúng tôi.

6
00:00:23,630 --> 00:00:26,975
Theo kiểu hàm mũi tên của chúng tôi, khai báo hoặc

7
00:00:26,975 --> 00:00:31,790
chức năng lưu, >> Will Sentance: Tự động,

8
00:00:31,790 --> 00:00:36,030
Tôi sẽ nói với bạn ngay bây giờ, là phạm vi từ vựng.

9
00:00:36,030 --> 00:00:40,750
Điều đó có nghĩa là nơi chúng tôi lưu hàm hoặc, hãy để tôi làm rõ điều đó, không, xin lỗi.

10
00:00:40,750 --> 00:00:44,490
Có phải, đó là nhiệm vụ này có phạm vi từ vựng.

11
00:00:44,490 --> 00:00:48,130
Có nghĩa là, khi chúng ta lưu hàm, khi chúng ta thực thi nó,

12
00:00:48,130 --> 00:00:53,010
điều này được đặt thành được xác định bởi nơi hàm được lưu.

13
00:00:53,010 --> 00:00:56,730
Vì vậy, nếu nó được lưu ở nơi đây là người dùng 1, khi chúng tôi chạy nó,

14
00:00:56,730 --> 00:01:01,240
bên trong sẽ là giá trị này từ nơi hàm được lưu, đó là User1.

15
00:01:01,240 --> 00:01:02,720
Vì vậy, hãy chỉ xem ví dụ đó ở đây.

16
00:01:03,720 --> 00:01:06,970
Bây giờ chúng ta đã xác định bằng một hàm mũi tên, hãy thực hiện thay đổi nhỏ này.

17
00:01:06,970 --> 00:01:10,700
Hãy nhanh chóng cùng nhau thực hiện, một lần nữa, hãy đảm bảo rằng chúng ta đã nắm được.

18
00:01:10,700 --> 00:01:14,580
Hãy nhanh chóng thực thi nó một lần nữa, vì vậy chúng tôi đang thực hiện ở đây.

19
00:01:14,580 --> 00:01:15,800
Đây là những điều phức tạp nhỏ ở đây, nhưng

20
00:01:15,800 --> 00:01:18,290
phần thưởng nhỏ thú vị mà tôi muốn bao gồm cho tất cả các bạn.

21
00:01:18,290 --> 00:01:21,530
Vì vậy, chúng tôi đang chạy user1.increment.

22
00:01:21,530 --> 00:01:26,170
Nó chạy phương thức gia tăng từ cửa hàng hàm thông qua user1.

23
00:01:26,170 --> 00:01:28,210
Tôi đã nói bạn vượt qua điều đó nhanh chóng.

24
00:01:28,210 --> 00:01:30,590
Dan, user1.increment, user1 tham gia?

25
00:01:30,590 --> 00:01:31,680
>> Diễn giả 2: Bộ nhớ toàn cầu.

26
00:01:32,710 --> 00:01:36,290
>> Will Sentance: Bộ nhớ chung, chúng ta đang tìm phương thức gia tăng, nó có ở đó không?

27
00:01:36,290 --> 00:01:38,650
>> Người nói 2: Không, vì vậy chúng tôi chuyển sang phần proto, và

28
00:01:38,650 --> 00:01:41,460
hãy để tôi tìm nó trong hàm người dùng nên lưu trữ đối tượng.

29
00:01:41,460 --> 00:01:44,700
>> Will Sentance: Tuyệt vời, chúng tôi lấy mã của nó, và chúng tôi nghĩ sẽ thực thi nó.

30
00:01:44,700 --> 00:01:47,378
Và điều đầu tiên và bộ nhớ cục bộ Dan là?

31
00:01:47,378 --> 00:01:51,677
>> Loa 2: Không đổi ở 1, cái này.

32
00:01:51,677 --> 00:01:53,981
>> Will Sentance: Vâng, như một tham số, không có vấn đề, đó là?

33
00:01:53,981 --> 00:01:54,837
>> Người nói 2: Người dùng1. >> Will Sentance: Đó là gì

34
00:01:54,837 --> 00:01:56,886
chúng tôi hy vọng vì đó là những gì chúng tôi đang chạy chức năng này

35
00:01:56,886 --> 00:01:59,160
sở hữu mà chúng tôi hy vọng nó sẽ ảnh hưởng đến điều này.

36
00:01:59,160 --> 00:02:01,610
Chúng tôi luôn muốn có chức năng và dữ liệu của mình.

37
00:02:01,610 --> 00:02:04,320
Có thể sử dụng chức năng trực tiếp trên dữ liệu ngay tại đó và

38
00:02:04,320 --> 00:02:06,330
thì đó là loại toàn bộ mục tiêu của việc này.

39
00:02:06,330 --> 00:02:08,240
Vì vậy, đừng quên điều đó khi chúng ta đi sâu vào những phức tạp này và

40
00:02:08,240 --> 00:02:10,240
đừng quên mục tiêu tổng thể đó.

41
00:02:10,240 --> 00:02:11,780
Đây là những gì một trông tuyệt vời.

42
00:02:13,380 --> 00:02:14,668
Hãy khai báo chức năng đó Dan.

43
00:02:14,668 --> 00:02:18,110
>> Diễn giả 2: Tại 1 và.

44
00:02:18,110 --> 00:02:20,710
>> Will Sentance: Trong chức năng mũi tên ngôi sao, nhưng nó không khác nhau.

45
00:02:20,710 --> 00:02:21,399
Đây rồi.

46
00:02:22,900 --> 00:02:24,740
Và chúng ta ngay lập tức làm gì với nó, Dan?

47
00:02:24,740 --> 00:02:26,046
>> Người nói 2: Chúng tôi gọi nó, e thực hiện nó.

48
00:02:26,046 --> 00:02:28,420
>> Will Sentance: Chúng tôi gọi nó, e thực hiện nó.

49
00:02:28,420 --> 00:02:30,180
Cái gì mới toanh vậy Dan?

50
00:02:30,180 --> 00:02:31,095
>> Diễn giả 2: Thực thi loạia.

51
00:02:31,095 --> 00:02:36,380
>> Will Sentance: Việc thực thi đẹp và trong bộ nhớ cục bộ.

52
00:02:36,380 --> 00:02:38,440
Bởi vì nó là một chức năng mũi tên.

53
00:02:38,440 --> 00:02:43,630
Tôi không biết, tôi mặc dù chúng tôi cần nó, nhưng nó nằm trong chức năng của chúng tôi.

54
00:02:43,630 --> 00:02:51,420
Đây là nhiệm vụ bên trong bộ nhớ cục bộ, nó sẽ là toàn cục vì lưu ý,

55
00:02:51,420 --> 00:02:56,420
một quy tắc đơn giản của chúng tôi là bất kỳ chức năng nào đang được chạy ở phía bên phải

56
00:02:56,420 --> 00:02:59,330
của dấu chấm bất kể phía bên trái sẽ là nhiệm vụ danh sách.

57
00:02:59,330 --> 00:03:02,890
Nhưng khi không có dấu chấm ở đây, nó sẽ mặc định là chung cho cửa sổ.

58
00:03:04,430 --> 00:03:07,630
Trừ khi hàm đó được định nghĩa là hàm mũi tên,

59
00:03:07,630 --> 00:03:11,570
trong trường hợp này Dan của chúng ta nhiệm vụ này sẽ là gì?

60
00:03:11,570 --> 00:03:12,450
>> Loa 2: Vẫn còn User1.

61
00:03:12,450 --> 00:03:17,193
>> Will Sentance: Người dùng một, chính xác nhiệm vụ này là gì xung quanh định nghĩa

62
00:03:17,193 --> 00:03:19,489
trong đó 1 là phạm vi từ điển.

63
00:03:19,489 --> 00:03:21,770
Nó tĩnh là phạm vi, sự phân công này.

64
00:03:21,770 --> 00:03:24,720
Đây là một nhiệm vụ tĩnh hoặc từ điển, nghĩa là nó từ

65
00:03:24,720 --> 00:03:30,840
thời điểm xác định mà chúng tôi đặt cái này thành Người dùng1.

66
00:03:30,840 --> 00:03:36,180
Do đó, dòng mã this.score cộng với cộng,

67
00:03:36,180 --> 00:03:38,206
sẽ đánh giá những gì Todd, bây giờ?

68
00:03:38,206 --> 00:03:41,425
>> Người thuyết trình 2: User1.score ++.

69
00:03:41,425 --> 00:03:46,185
>> Will Sentance: Tuyệt vời, user1.score ++.

70
00:03:46,185 --> 00:03:48,070
Bạn phải vượt qua một vài cấp độ.

71
00:03:48,070 --> 00:03:52,660
1, 2, 3, có thuộc tính điểm của chúng tôi.

72
00:03:52,660 --> 00:03:56,993
Nó sẽ tăng lên bốn nhưng, hãy tăng nó lên,

73
00:03:58,760 --> 00:04:01,989
>> Will Sentance: 5, những người tuyệt vời.

74
00:04:01,989 --> 00:04:05,466
Đây là một cách tốt để giải quyết vấn đề này cho

75
00:04:05,466 --> 00:04:07,459
viết mã sạch này ở đây.

76
00:04:07,459 --> 00:04:13,610
Tất cả những người phù hợp, chúng ta hãy bắt đầu bằng ngón tay cái ở đây vào thời điểm này

77
00:04:13,610 --> 00:04:17,440
trên bất kỳ phần thưởng nào mà bất kỳ ai muốn thêm bất kỳ ngón tay cái nào, vâng, hãy tiếp tục đi Peter.

78
00:04:17,440 --> 00:04:20,390
>> Người thuyết trình 2: Sẽ tuyên bố số gia tăng

79
00:04:20,390 --> 00:04:24,850
tài sản như một chức năng mũi tên cũng giúp chúng tôi?

80
00:04:24,850 --> 00:04:26,050
>> Will Sentance: Sẽ không?

81
00:04:26,050 --> 00:04:30,020
Bởi vì nếu chúng tôi đã làm như vậy, khi chúng tôi chạy số gia đó.

82
00:04:30,020 --> 00:04:34,370
Vì vậy, câu hỏi của Peter là điều gì xảy ra nếu chúng ta nói một gia số như một hàm mũi tên?

83
00:04:35,900 --> 00:04:41,165
Nếu chúng tôi chạy nó, thì nhiệm vụ này có được xác định bởi nơi nó đang được chạy không

84
00:04:41,165 --> 00:04:46,366
ở phía bên tay phải của dấu chấm hoặc nơi nó được lưu trữ, trên toàn cầu?

85
00:04:46,366 --> 00:04:49,737
Bởi nơi nó được cất giữ, và do đó toàn bộ sẽ tan rã.

86
00:04:49,737 --> 00:04:51,587
Và bây giờ đây sẽ không phải là User1.

87
00:04:51,587 --> 00:04:54,787
Vì vậy, chúng tôi không muốn sử dụng các hàm mũi tên cho bao gồm

88
00:04:54,787 --> 00:04:56,168
phương pháp của chúng tôi trên các đối tượng.

89
00:04:56,168 --> 00:04:59,668
Nhưng đối với các chức năng bên trong chúng mà chúng tôi muốn chỉ ra ở đó

90
00:04:59,668 --> 00:05:02,047
phương pháp mà chúng đã được xác định, hoàn hảo.
