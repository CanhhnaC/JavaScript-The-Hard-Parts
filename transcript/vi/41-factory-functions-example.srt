1
00:00:00,090 --> 00:00:02,206
>> Will Sentance: Bắt đầu đi, Jason, dòng một,

2
00:00:02,206 --> 00:00:04,799
chúng ta đang lưu những gì trong bộ nhớ chung [SOUND] của mình?

3
00:00:04,799 --> 00:00:08,619
>> Người thuyết trình 2: Chúng tôi đang ràng buộc người tạo nhãn người dùng, với chức năng,

4
00:00:08,619 --> 00:00:11,040
đến thời gian chức năng >> Will Sentance: Fantastic.

5
00:00:11,040 --> 00:00:11,660
Đây rồi.

6
00:00:12,720 --> 00:00:15,120
Có một định nghĩa hàm.

7
00:00:15,120 --> 00:00:19,860
Dòng tiếp theo, qua Ethan, hết cỡ, đánh cái gì, ở phía bên tay trái,

8
00:00:19,860 --> 00:00:22,890
>> Người thuyết trình 2: Định nghĩa một const người dùng.

9
00:00:22,890 --> 00:00:24,060
>> Will Sentance: Nhân tiện, tôi muốn nói với mọi người rằng,

10
00:00:24,060 --> 00:00:27,680
chỉ cần biết bạn khác thường như thế nào, ngay cả trong môi trường kỹ thuật chuyên nghiệp

11
00:00:27,680 --> 00:00:30,630
mà bây giờ bạn chỉ cần bắt đầu, vâng, thật tuyệt, chuỗi JavaScript sẽ biến mất ở đó.

12
00:00:30,630 --> 00:00:34,940
Như vậy không phải là tiêu chuẩn, thậm chí có sự phát triển lại đầy đủ, trực quan,

13
00:00:34,940 --> 00:00:36,510
những gì bạn đã làm ở đó, Ethan, xuất sắc.

14
00:00:36,510 --> 00:00:37,910
Hiện nay.

15
00:00:37,910 --> 00:00:39,510
Chúa ơi, tôi vừa ngủ kinh khủng.

16
00:00:39,510 --> 00:00:40,047
Chà!

17
00:00:40,047 --> 00:00:41,020
Tôi đang băt đâu mệt đây.

18
00:00:41,020 --> 00:00:42,148
Tại sao tôi lại làm vậy?

19
00:00:42,148 --> 00:00:43,970
Xin lỗi, mọi người.

20
00:00:43,970 --> 00:00:46,590
Bạn có biết điều gì sẽ xảy ra với người dùng không?

21
00:00:46,590 --> 00:00:48,210
Không ý kiến.

22
00:00:48,210 --> 00:00:51,390
Thật tốt khi tôi đã làm điều đó, vì nó giống như, chúng tôi không biết.

23
00:00:52,840 --> 00:00:54,650
Bởi vì chúng ta phải đi và làm gì, Ethan?

24
00:00:55,660 --> 00:00:57,340
>> Người thuyết trình 2: Người tạo cuộc gọi.

25
00:00:57,340 --> 00:00:58,530
>> Di chúc: Đúng, và trong khi chờ đợi,

26
00:00:58,530 --> 00:01:01,530
người dùng chắc chắn không phải là một đối tượng, và nó không biết nó sẽ như thế nào,

27
00:01:01,530 --> 00:01:03,360
thực tế nó là gì?

28
00:01:03,360 --> 00:01:03,950
>> Loa 2: Chưa được khởi tạo.

29
00:01:03,950 --> 00:01:05,980
>> Will Sentance: Chưa được khởi tạo, chính xác.

30
00:01:05,980 --> 00:01:10,603
Cảm ơn Peter, bạn cũng sẽ nói điều tương tự, rằng Ethan, vì vậy

31
00:01:10,603 --> 00:01:12,280
chúng ta hãy gọi người tạo người dùng.

32
00:01:12,280 --> 00:01:14,520
Chúng ta sẽ vào chung kết ngay đây, mọi người.

33
00:01:14,520 --> 00:01:20,380
Chà, trận chung kết, trận chung kết, vòng cuối cùng, đường thẳng cuối cùng của trận chung kết.

34
00:01:20,380 --> 00:01:22,670
Được rồi, tôi không biết.

35
00:01:22,670 --> 00:01:25,210
Tôi định tiếp tục, được rồi, chúng ta đang đánh mất nó.

36
00:01:25,210 --> 00:01:29,479
Vì vậy, chúng tôi bắt đầu, chúng tôi đang gọi Người tạo người dùng,

37
00:01:29,479 --> 00:01:32,268
thương hiệu mới- >> Diễn giả 2: Bối cảnh thực thi.

38
00:01:32,268 --> 00:01:34,010
>> Will Sentance: Bối cảnh thực hiện, tại chỗ, chính xác.

39
00:01:34,010 --> 00:01:34,750
Vào đó, chúng tôi đi.

40
00:01:36,380 --> 00:01:38,210
Rất mãnh liệt các bạn ạ.

41
00:01:38,210 --> 00:01:40,754
Vào đó, chúng tôi đi.

42
00:01:40,754 --> 00:01:43,480
Được rồi, chúng ta bắt đầu.

43
00:01:43,480 --> 00:01:49,246
Và trong Bộ nhớ cục bộ, hãy có

44
00:01:49,246 --> 00:01:53,798
hãy có bạn của chúng tôi, Dan.

45
00:01:53,798 --> 00:01:57,889
Dan, hãy xử lý điều đầu tiên, chúng tôi luôn xử lý khi chúng tôi thực thi một hàm

46
00:01:57,889 --> 00:02:00,190
gọi một hàm, và đó là để xử lý?

47
00:02:00,190 --> 00:02:00,880
>> Diễn giả 2: Tranh luận.

48
00:02:00,880 --> 00:02:03,420
>> Will Sentance: Lập luận của chúng tôi, và tất cả đều là con người, điều đầu tiên là ý chí, và

49
00:02:03,420 --> 00:02:05,430
tham số của nó được gán là?

50
00:02:05,430 --> 00:02:06,900
>> Người nói 2: Tên. >> Di chúc: Tên, vâng,

51
00:02:06,900 --> 00:02:09,380
hãy thực sự chính xác, đó là bởi vì nó hơi bị đóng băng, mọi người.

52
00:02:09,380 --> 00:02:13,230
Tôi đã đưa cái này cho bạn tuần trước, bạn biết đó là kỹ sư nhỏ, họ đã

53
00:02:13,230 --> 00:02:18,700
bị ném ra một chút bởi những gì chúng ta đang xem, vì tôi có thể thấy hai cái tên, trong dòng đó bên dưới.

54
00:02:18,700 --> 00:02:19,690
Chúng ta sẽ biết lý do tại sao, sau một giây.

55
00:02:19,690 --> 00:02:20,500
Được rồi, tên, xuất sắc.

56
00:02:20,500 --> 00:02:22,689
Và sau đó tham số tiếp theo là?

57
00:02:22,689 --> 00:02:23,860
>> Người nói 2: Điểm, giá trị của ba.

58
00:02:23,860 --> 00:02:24,810
>> Will Sentance: Vâng.

59
00:02:24,810 --> 00:02:26,700
Đừng ai nghĩ rằng đây là tài sản.

60
00:02:26,700 --> 00:02:29,730
Đây chỉ là các biến dữ liệu, bạn biết đấy, nhãn, giống như bất kỳ biến nào khác.

61
00:02:29,730 --> 00:02:32,140
Chúng chỉ là những cái mà chúng ta phải để lại một chỗ dành sẵn, ngay từ đầu và

62
00:02:32,140 --> 00:02:35,420
sau đó điền trước khi chúng tôi chạy chức năng, bạn nhé.

63
00:02:35,420 --> 00:02:37,250
Bây giờ, chúng ta nhập phần thân của hàm.

64
00:02:37,250 --> 00:02:39,124
Braden, chúng ta phải làm gì trong hàng một?

65
00:02:39,124 --> 00:02:44,510
>> Loa 2: Khai báo người dùng mới không đổi, là đối tượng mới.

66
00:02:44,510 --> 00:02:46,490
>> Will Sentance: Tuyệt vời, cảm ơn bạn, Braden.

67
00:02:46,490 --> 00:02:47,938
Được rồi, giao cho bạn, Kayla.

68
00:02:47,938 --> 00:02:53,190
Cố lên [LAUGH], tôi thực sự luôn đấu tranh với điều đó.

69
00:02:53,190 --> 00:02:53,800
Cho bạn, Kayla.

70
00:02:55,020 --> 00:02:59,099
>> Người thuyết trình 3: Chúng tôi đang đặt tên thuộc tính cho người dùng mới

71
00:02:59,099 --> 00:03:00,212
object- >> Will Sentance: Tôi thích điều đó.

72
00:03:00,212 --> 00:03:03,418
>> Loa 3: Đến giá trị của tên đối số.

73
00:03:03,418 --> 00:03:05,620
>> Will Sentance: Thật xuất sắc, đúng chỗ.

74
00:03:05,620 --> 00:03:08,700
Bây giờ, điều đó thực sự quan trọng ở đó, vì nó có một chút

75
00:03:08,700 --> 00:03:13,680
kỳ lạ mà chúng tôi đang nói, hãy tìm kiếm người dùng mới và ngụ ý rằng ở đó

76
00:03:13,680 --> 00:03:18,590
là một thuộc tính tên trên nó, hoặc nếu không có tạo nó bây giờ trong đối tượng.

77
00:03:18,590 --> 00:03:20,530
Đây không phải là một biến, phải không?

78
00:03:20,530 --> 00:03:22,220
Đây không phải là nhãn, đây không phải là số nhận dạng.

79
00:03:22,220 --> 00:03:24,690
Đây là một thuộc tính trên đối tượng, người dùng mới.

80
00:03:24,690 --> 00:03:30,600
Đúng như Kayla đã nói, hãy tạo ra nó và gán cho nó bất cứ thứ gì,

81
00:03:30,600 --> 00:03:34,280
vì vậy vào bên phải của dấu bằng, bất cứ điều gì ở bên phải ở đó,

82
00:03:34,280 --> 00:03:36,100
đi tìm cái đó trong bộ nhớ.

83
00:03:36,100 --> 00:03:44,040
Nó sẽ thêm chuỗi sẽ và chúng tôi lưu trữ trong tên đúng.

84
00:03:44,040 --> 00:03:45,800
Đúng như Kayla nói.

85
00:03:45,800 --> 00:03:48,950
Hãy làm lại lần nữa, Kayla, nếu bạn phiền, dòng tiếp theo nói phải làm gì?

86
00:03:48,950 --> 00:03:54,900
>> Người thuyết trình 3: Chúng tôi đặt điểm thuộc tính trên đối tượng người dùng mới thành giá trị của điểm,

87
00:03:54,900 --> 00:03:55,460
là 2.

88
00:03:55,460 --> 00:03:56,910
>> Will Sentance: Đúng, chính xác là lập luận của chúng tôi.

89
00:03:56,910 --> 00:04:00,530
Điểm tham số là giá trị đối số, 3, được lưu trữ trong đó.

90
00:04:01,590 --> 00:04:05,272
Dan, đoạn cuối ở đây, chúng ta đang làm gì?

91
00:04:05,272 --> 00:04:09,583
>> Người nói 2: Chúng tôi đang tạo ra một bước tăng

92
00:04:09,583 --> 00:04:11,920
function- >> Will Sentance: Đúng.

93
00:04:11,920 --> 00:04:13,220
>> Người nói 2: Về người dùng mới- >> Will Sentance: Đúng vậy.

94
00:04:13,220 --> 00:04:14,861
>> Người nói 2: Và nói điều đó- >> Câu Di chúc: Đây rồi,

95
00:04:14,861 --> 00:04:19,440
lưu tất cả mã của nó, lưu tất cả mã của nó, hãy nghĩ về việc lưu tất cả mã của nó.

96
00:04:19,440 --> 00:04:23,050
Nhưng tôi muốn điều đó, bởi vì tôi muốn có thể làm cho người dùng mới, tốt, trong vòng một giây.

97
00:04:23,050 --> 00:04:24,729
Đây rồi, tôi có một vật đẹp.

98
00:04:24,729 --> 00:04:25,800
Nó có mọi thứ tôi cần.

99
00:04:25,800 --> 00:04:29,490
Nhưng, Jeff, nó bị mắc kẹt bên trong bối cảnh thực thi của người tạo người dùng.

100
00:04:29,490 --> 00:04:33,140
Tôi cần làm gì để đưa nó trở thành người dùng?

101
00:04:34,430 --> 00:04:37,530
Tôi trả lại nó, chính xác, trả lại nó.

102
00:04:37,530 --> 00:04:40,500
Và biết rằng toàn bộ phần này ở đây thực sự đánh giá,

103
00:04:40,500 --> 00:04:44,800
biến cái này trả lại đối tượng đó, và lưu trữ cái bất thường đó.

104
00:04:44,800 --> 00:04:48,330
Vậy là xong, đây rồi,

105
00:04:48,330 --> 00:04:54,367
người dùng một đối tượng và nhìn vào đối tượng đó, mọi người,

106
00:04:54,367 --> 00:05:00,125
nó giống hệt như thiết lập trước đây của chúng tôi.

107
00:05:02,589 --> 00:05:07,520
>> Will Sentance: Đây rồi, và bây giờ chúng ta có chức năng tuyệt vời ở đó.

108
00:05:09,300 --> 00:05:11,880
Tôi muốn nói một điều nhỏ, rằng tôi không, hãy chết.

109
00:05:11,880 --> 00:05:13,320
Chúng tôi sẽ đến thứ hai.

110
00:05:15,040 --> 00:05:22,197
Hãy quay lại toàn cầu như hiện tại và nhấn dòng tiếp theo, khai báo người dùng 2.

111
00:05:22,197 --> 00:05:26,337
Tôi sẽ làm điều này ở đây, mặc dù nó có vẻ lặp đi lặp lại, vì tôi muốn bạn

112
00:05:26,337 --> 00:05:30,425
phát hiện thứ gì đó có thể hơi thừa hoặc rất thừa, hoặc.

113
00:05:30,425 --> 00:05:36,559
Về cơ bản, và từ cơ bản,

114
00:05:36,559 --> 00:05:43,197
và, đừng bận tâm, về cơ bản là thừa.

115
00:05:43,197 --> 00:05:47,955
Chúng tôi sẽ chạy trình tạo người dùng một lần nữa, chúng tôi sẽ tạo

116
00:05:47,955 --> 00:05:52,640
bối cảnh thực thi mới, Tommy Paulson, Tim và năm người này.

117
00:05:53,770 --> 00:05:57,300
Bạn tôi là bạn của tôi từ thời đi học.

118
00:05:58,450 --> 00:05:59,220
Những người bạn rất tốt.

119
00:05:59,220 --> 00:06:01,670
Tôi không biết tại sao, lẽ ra tôi nên đổi những cái tên này từ lâu.

120
00:06:01,670 --> 00:06:04,110
Tôi nghĩ rằng tôi nghĩ trong phiên bản OP của tất cả, nhưng

121
00:06:04,110 --> 00:06:08,760
Tôi đã đổi tên, tôi không biết tại sao từ lâu, bốn năm trước,

122
00:06:08,760 --> 00:06:13,990
Tôi đặt nó là Tim, bạn của tôi, người bạn duy nhất của tôi từ thời đại học.

123
00:06:13,990 --> 00:06:17,180
Trên thực tế, tôi muốn có nó trong hồ sơ, tôi có nhiều, không,

124
00:06:17,180 --> 00:06:20,390
không, [LAUGH] kể cả anh ấy, tôi cũng không chắc anh ấy coi tôi là bạn.

125
00:06:20,390 --> 00:06:24,970
Được rồi, dù sao thì, tôi nghĩ anh ấy coi tôi là đồng nghiệp.

126
00:06:24,970 --> 00:06:31,668
Được rồi, vì vậy trong bối cảnh thực thi này, chúng ta đi >> Will Sentance: Tôi sẽ

127
00:06:31,668 --> 00:06:33,260
giữ nó nhỏ, bây giờ.

128
00:06:33,260 --> 00:06:39,000
Và trong bộ nhớ cục bộ, >> Will Sentance: Chúng ta sẽ có,

129
00:06:39,000 --> 00:06:41,340
Tôi không biết tại sao tôi lại làm cho nó nhỏ như vậy, nhưng chúng ta bắt đầu.

130
00:06:41,340 --> 00:06:46,860
Tên, Tim, điểm số, năm.

131
00:06:46,860 --> 00:06:49,610
Sau đó, chúng tôi tạo một đối tượng, người dùng mới.

132
00:06:49,610 --> 00:06:51,716
Tệ thật, không hiểu sao lại làm nhỏ thế này.

133
00:06:51,716 --> 00:06:56,620
Một đối tượng, người dùng mới với thuộc tính tên,

134
00:06:56,620 --> 00:07:02,650
lưu giá trị đó vào giá trị của tham số tên, có đối số là hai.

135
00:07:04,180 --> 00:07:08,120
Điểm, năm, tại sao tôi làm cho nó quá nhỏ?

136
00:07:08,120 --> 00:07:08,960
Tôi không biết.

137
00:07:08,960 --> 00:07:13,659
Và, gia tăng, lưu một thương hiệu

138
00:07:13,659 --> 00:07:18,930
chức năng mới, tất cả mã của nó.

139
00:07:18,930 --> 00:07:23,798
Vì vậy, tôi biết rằng trên đối tượng đó, khi nó được trả về cho người dùng hai,

140
00:07:23,798 --> 00:07:27,350
nó sẽ đẹp,

141
00:07:30,570 --> 00:07:34,500
nó sẽ có một phương pháp gia tăng đẹp mắt trên đó.

142
00:07:36,250 --> 00:07:41,425
Đây rồi, tên, Tim, điểm số,

143
00:07:41,425 --> 00:07:47,314
năm, và số tăng, là một hàm,

144
00:07:47,314 --> 00:07:53,260
và bây giờ chúng tôi thực hiện tất cả các kiểm tra quan trọng của chúng tôi.

145
00:07:53,260 --> 00:07:57,993
Chúng ta có thể làm, người dùng 2, dấu chấm hoặc bất kỳ người nào trong số họ, nhưng

146
00:07:57,993 --> 00:08:01,613
đó là user2.increment.

147
00:08:01,613 --> 00:08:05,710
Todd, cho bạn, tra cứu thời gian, người dùng 2, nó ở đâu?

148
00:08:05,710 --> 00:08:06,330
>> Người nói 2: Trong bộ nhớ toàn cầu.

149
00:08:06,330 --> 00:08:07,430
>> Will Sentance: Bộ nhớ toàn cầu, chúng tôi có nó.

150
00:08:07,430 --> 00:08:08,289
>> Người nói 2: Có. >> Will Sentance: Đúng vậy.

151
00:08:09,320 --> 00:08:12,170
Tăng lên, nó là một thuộc tính, nó là một phương thức trên người dùng 2?

152
00:08:12,170 --> 00:08:15,210
>> Người nói 2: Có. >> Will Sentance: Vâng, đúng vậy, chúng tôi lấy nó.

153
00:08:15,210 --> 00:08:17,030
Tôi sẽ không thực hiện nó ngay bây giờ.

154
00:08:17,030 --> 00:08:20,310
Nhưng chỉ cần nghĩ về những gì mã gia tăng nói.

155
00:08:20,310 --> 00:08:25,930
Nó nói, điểm số chấm của người dùng mới ++, nhưng tôi khá chắc chắn rằng không có người dùng mới nào ở đây.

156
00:08:25,930 --> 00:08:27,410
Và chúng tôi đã đánh mất điều đó.

157
00:08:27,410 --> 00:08:31,853
Trừ khi phần tăng hàm được lưu trữ ở đây có ba lô [CROSSTALK],

158
00:08:31,853 --> 00:08:36,357
đó là một liên kết đến tên, tên cũ của cùng một chức năng, nghĩa là nếu tôi chạy,

159
00:08:36,357 --> 00:08:40,860
như một phần thưởng rất nhỏ, và mọi người, đừng lo lắng về điều này, nếu bạn tiếp tục,

160
00:08:40,860 --> 00:08:44,757
khi tôi chạy tăng dần bạn, bởi vì chúng tôi sẽ không sử dụng kiểu này.

161
00:08:44,757 --> 00:08:47,420
Chúng tôi sẽ không bao giờ sử dụng phong cách này, vì vậy chúng tôi không cần phải chăm chăm vào nó.

162
00:08:47,420 --> 00:08:53,310
Nhưng chỉ cần lưu ý cách đóng ở mọi nơi, đối tượng được trả về,

163
00:08:53,310 --> 00:08:58,373
hàm tăng bên trong nó cho biết newUser.score ++.

164
00:08:58,373 --> 00:09:00,340
Người mới ở đâu?

165
00:09:00,340 --> 00:09:05,190
Bối cảnh thực thi này, hãy nói rõ, đã bị xóa.

166
00:09:07,740 --> 00:09:11,670
Cả hai đều đã bị xóa, nhưng, vì đối tượng, khi nó trở lại đã

167
00:09:11,670 --> 00:09:15,730
một chức năng trên nó, chức năng đó đã được liên kết với tất cả bộ nhớ xung quanh

168
00:09:15,730 --> 00:09:18,700
bao gồm cả người dùng mới, vốn là nhãn cho cùng một đối tượng.

169
00:09:18,700 --> 00:09:22,810
Ý tôi là chúng tôi vẫn nhận được nhãn người dùng mới bên trong gia số và

170
00:09:22,810 --> 00:09:25,570
nó sẽ tham chiếu đến user2.

171
00:09:25,570 --> 00:09:27,458
Ba lô ở khắp mọi nơi.

172
00:09:27,458 --> 00:09:29,163
Tôi chỉ muốn thưởng một ít tiền đó,

173
00:09:29,163 --> 00:09:32,430
bởi vì chúng tôi đã thấy ba lô trong phiên này, nhưng đừng lo lắng về nó.

174
00:09:33,450 --> 00:09:35,450
Bởi vì chúng tôi sẽ không bao giờ sử dụng cách tiếp cận này.

175
00:09:35,450 --> 00:09:39,770
Nhưng cách tiếp cận này về cơ bản đã hiệu quả, dễ lý giải?

176
00:09:39,770 --> 00:09:40,930
Bạn đặt cược đó là.

177
00:09:40,930 --> 00:09:45,830
Tôi có chức năng của mình ngay tại đó, ở phía bên phải của dấu chấm, tôi có thể

178
00:09:45,830 --> 00:09:50,650
hãy điền trước Google Tìm kiếm, người dùng hai dấu chấm, nó sẽ điền.

179
00:09:50,650 --> 00:09:52,480
Nếu tôi có các chức năng khác được lưu trữ ở đó, tất cả chúng sẽ ở đó,

180
00:09:52,480 --> 00:09:55,100
Tôi có thể bắt đầu viết, và chúng sẽ xuất hiện theo đúng nghĩa đen.

181
00:09:55,100 --> 00:09:59,650
Đó là thiết kế của codex bạn chọn, nhưng nó nói lên thực tế

182
00:09:59,650 --> 00:10:05,380
rằng các chức năng đó hoàn toàn, theo nghĩa đen trên đối tượng.

183
00:10:05,380 --> 00:10:06,280
Có sẵn.

184
00:10:06,280 --> 00:10:07,830
Xinh đẹp tuyệt trần.

185
00:10:07,830 --> 00:10:08,880
Chúng ta xong chưa?

186
00:10:08,880 --> 00:10:10,000
Đã được thực hiện.

187
00:10:10,000 --> 00:10:14,870
Dễ dàng giải thích, không cần tìm kiếm với các chức năng,

188
00:10:14,870 --> 00:10:17,660
không nghĩ rằng chức năng này thực sự áp dụng cho người dùng bài kiểm tra của tôi.

189
00:10:17,660 --> 00:10:22,686
Câu hỏi đố 17 của tôi, bởi vì nó nằm trên đối tượng này, và

190
00:10:22,686 --> 00:10:27,712
tuy nhiên, cách tiếp cận này hoàn toàn không sử dụng được, bởi vì tôi đã nói

191
00:10:27,712 --> 00:10:33,782
có hai mục tiêu khác, và mô hình của tôi, những gì tôi nói, chúng là?

192
00:10:33,782 --> 00:10:38,307
Dễ dàng thêm các tính năng vào chức năng mới, mới, và tuy nhiên,

193
00:10:38,307 --> 00:10:42,679
chính thức trước khi mọi người cho tôi biết điều gì, với phong cách này,

194
00:10:42,679 --> 00:10:47,301
về cơ bản là sai, rằng tôi không bao giờ có thể sử dụng cái này, Dan, hãy tiếp tục.

195
00:10:47,301 --> 00:10:50,090
>> Người thuyết trình 2: Chúng tôi đang lưu trữ cùng một chức năng hai lần.

196
00:10:50,090 --> 00:10:51,330
>> Will Sentance: Anh ấy đúng chỗ.

197
00:10:51,330 --> 00:10:54,950
Không có gì tránh khỏi nó, rằng dữ liệu này chúng tôi không thể.

198
00:10:54,950 --> 00:10:59,490
Chúng tôi không thể, bạn biết đấy, không lưu trữ T và năm, Will và ba, đó là những dữ liệu khác nhau.

199
00:10:59,490 --> 00:11:04,455
Vì vậy, tôi lại có một câu chuyện, nó khác, nhưng mã của hàm này, và

200
00:11:04,455 --> 00:11:07,481
mã của chức năng này, giống hệt nhau, và

201
00:11:07,481 --> 00:11:11,982
nếu tôi có 500 người dùng cần có chức năng tăng dần, vì vậy

202
00:11:11,982 --> 00:11:17,758
rằng chúng tôi có thể làm cho chúng tôi một 703.increment, tôi nói năm người trong số chúng tôi và sử dụng nó 495.increment.

203
00:11:17,758 --> 00:11:20,090
Tôi phải có một bản sao của nó, phải không?

204
00:11:20,090 --> 00:11:24,212
Và nếu cả hai cách, tôi chỉ có một chức năng, tôi có 100, 200, ba, bốn,

205
00:11:24,212 --> 00:11:25,675
năm, nghĩa là hàng trăm.

206
00:11:25,675 --> 00:11:29,304
Tất cả họ sẽ được gọi, tôi sẽ có bản sao của từng người trong số họ,

207
00:11:29,304 --> 00:11:31,440
mỗi người trong số họ có thể 10 dòng mã.

208
00:11:31,440 --> 00:11:33,945
Tôi có 1000 người dùng, tức là 10.000.

209
00:11:33,945 --> 00:11:35,758
Và sau đó mỗi chức năng là 100.

210
00:11:35,758 --> 00:11:38,660
Tôi đang lãng phí 10 phần nghìn dòng mã ở đây.

211
00:11:38,660 --> 00:11:44,580
Vì vậy, không gian trong bộ nhớ cũng sẽ thêm.

212
00:11:44,580 --> 00:11:46,990
Ngoài ra, một điều khác khiến người ta đau đầu về điều này, có lẽ, hoặc

213
00:11:46,990 --> 00:11:49,350
Có vấn đề về điều này, vâng, Peter.

214
00:11:49,350 --> 00:11:51,390
>> Người thuyết trình 2: Nếu bạn muốn thêm một tính năng vào điều này,

215
00:11:51,390 --> 00:11:52,730
bạn phải thêm nó vào từng người dùng.

216
00:11:52,730 --> 00:11:55,001
>> Will Sentance: Hoàn hảo, chính xác như tôi nói.

217
00:11:55,001 --> 00:11:58,627
Vâng, tại chỗ, chúng tôi sẽ phải thêm chức năng theo cách thủ công nếu chúng tôi muốn thêm

218
00:11:58,627 --> 00:12:00,960
một tính năng, đó là chức năng mới.

219
00:12:00,960 --> 00:12:03,367
Thêm thủ công nó vào mọi đối tượng.

220
00:12:06,214 --> 00:12:09,920
>> Will Sentance: Nhưng tôi sẽ nói điều này, siêu trực quan.

221
00:12:11,280 --> 00:12:14,020
Không có gì bí ẩn, tất nhiên tôi có thể sử dụng hàm tăng dần user2,

222
00:12:14,020 --> 00:12:15,400
nó ở ngay đó trên đối tượng.

223
00:12:17,730 --> 00:12:21,190
Tạo các đối tượng bằng cách sử dụng một hàm vấn đề, mỗi khi chúng tôi tạo một người dùng mới,

224
00:12:21,190 --> 00:12:23,790
chúng tôi tạo không gian trong bộ nhớ của máy tính đó cho các chức năng dữ liệu của chúng tôi.

225
00:12:23,790 --> 00:12:26,468
Nhưng chức năng đó chỉ là bản sao của cùng một mã.

226
00:12:26,468 --> 00:12:27,330
Có cách nào tốt hơn?

227
00:12:27,330 --> 00:12:27,830
Chúng ta sẽ thấy.
