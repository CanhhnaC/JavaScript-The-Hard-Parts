1
00:00:00,012 --> 00:00:02,030
>> Câu Di chúc: Giải pháp 3: Sử dụng hai hướng,

2
00:00:02,030 --> 00:00:05,510
họ làm hai việc cùng một lúc, họ làm hai việc cùng một lúc.

3
00:00:05,510 --> 00:00:08,820
Một trong JavaScript, một bên ngoài Java trên trình duyệt web.

4
00:00:08,820 --> 00:00:14,460
Các chức năng mặt tiền vừa khởi động trình duyệt web nền hoạt động vừa

5
00:00:15,550 --> 00:00:19,670
trong JavaScript, trả về đối tượng giữ chỗ được gọi là đối tượng hứa hẹn ngay lập tức,

6
00:00:19,670 --> 00:00:22,000
điều đó sẽ được điền vào sau này.

7
00:00:22,000 --> 00:00:27,390
Với giá trị từ hoạt động trình duyệt web nền, các tính năng của trình duyệt web hoạt động.

8
00:00:27,390 --> 00:00:28,530
Được rồi, chúng ta bắt đầu.

9
00:00:28,530 --> 00:00:31,080
Chúng tôi sẽ đi qua nó rất chính xác.

10
00:00:33,200 --> 00:00:37,340
Dòng một, Michele biết làm điều này rất chậm.

11
00:00:38,770 --> 00:00:44,830
Michele, chúng ta đang làm gì rất chậm trong lần đầu tiên của chúng ta,

12
00:00:44,830 --> 00:00:45,890
Tôi cũng sẽ đi chậm thôi.

13
00:00:45,890 --> 00:00:48,876
Rất chậm, Michelle,

14
00:00:48,876 --> 00:00:53,660
trong dòng mã đầu tiên của chúng tôi, Michelle.

15
00:00:53,660 --> 00:00:57,150
Chúng ta đang làm gì vậy? >> [ĐỦ]

16
00:00:57,150 --> 00:00:58,806
>> Will Sentance: Đồng minh đầu tiên của chúng ta,

17
00:00:58,806 --> 00:01:02,892
Michelle? >> Michelle: Chúng tôi đang sử dụng JavaScript để

18
00:01:02,892 --> 00:01:06,020
tuyên bố [LAUGH] trong bộ nhớ- >> Di chúc: Rất tốt,

19
00:01:06,020 --> 00:01:07,210
điều đó rất rõ ràng, tuyệt vời.

20
00:01:07,210 --> 00:01:10,830
Một chức năng mà chúng tôi đang gọi là hiển thị.

21
00:01:10,830 --> 00:01:13,300
Chúng tôi đang đặt tên cho nó, hãy cẩn thận, tôi cũng nói là đang gọi, nhưng

22
00:01:13,300 --> 00:01:16,390
loại đó cho thấy chúng tôi đang chạy nó. >> Will Sentance: Chúng tôi đang đặt tên cho màn hình,

23
00:01:16,390 --> 00:01:19,870
bởi vì chúng tôi có thể bối rối khi nói rằng chúng tôi đang thực hiện nó, chúng tôi đang gọi nó.

24
00:01:19,870 --> 00:01:21,423
Không, chúng tôi chỉ đặt tên cho nó, hiển thị.

25
00:01:21,423 --> 00:01:26,503
Tôi biết bạn không ngụ ý điều đó, nhưng nói rõ ràng, màn hình hiển thị được lưu một cách xuất sắc.

26
00:01:26,503 --> 00:01:31,227
Dòng tiếp theo, Brian, bên trái đầu tiên. >> Brian: Chúng tôi đang xóa một tên không đổi

27
00:01:31,227 --> 00:01:33,450
dữ liệu trong tương lai. >> Will Sentance: Xuất sắc.

28
00:01:33,450 --> 00:01:38,046
Được rồi, nó sẽ là gì theo nghĩa chung hơn?

29
00:01:39,310 --> 00:01:43,790
Vâng, đó là gì, nó luôn luôn là kết quả của công việc của bên phải, vì vậy

30
00:01:43,790 --> 00:01:46,400
đó là giá trị trả về của phía bên phải

31
00:01:46,400 --> 00:01:48,610
thực hiện tìm nạp. >> Michelle: Vâng.

32
00:01:48,610 --> 00:01:49,830
>> Will Sentance: Tốt, bạn có thể muốn

33
00:01:49,830 --> 00:01:51,920
nói vậy, tôi xin lỗi nếu bạn đã.

34
00:01:51,920 --> 00:01:54,210
Nhưng bây giờ, nó sẽ là gì ?. >> Brian: Không xác định.

35
00:01:54,210 --> 00:01:55,207
>> Will Sentance: Chưa xác định, chúng tôi chưa

36
00:01:55,207 --> 00:01:56,621
biết những gì để lưu trữ ở đó, chính xác.

37
00:01:56,621 --> 00:01:58,786
Chúng tôi sẽ làm một số công việc ở phía bên phải.

38
00:01:58,786 --> 00:02:04,180
Vì vậy, chúng ta sẽ bắt đầu chạy một hàm, tìm nạp.

39
00:02:04,180 --> 00:02:07,830
Bây giờ ai nghĩ rằng tìm nạp hàm này tạo ra một bối cảnh thực thi theo cách

40
00:02:07,830 --> 00:02:09,420
chúng ta đã quen?

41
00:02:09,420 --> 00:02:10,790
Giơ tay.

42
00:02:10,790 --> 00:02:16,610
Không, thay vào đó, cảm ơn James vì ​​đã tốt bụng cho chúng tôi một người.

43
00:02:16,610 --> 00:02:18,720
Thay vào đó tìm nạp là gì?

44
00:02:18,720 --> 00:02:21,220
Tìm nạp là một hàm mặt tiền.

45
00:02:21,220 --> 00:02:26,233
Một mặt tiền cho một số công việc, thực sự tôi cho rằng nó có thể tạo ra một bối cảnh thực thi cho

46
00:02:26,233 --> 00:02:31,120
điều này theo nghĩa mà chúng ta đã quen, nhưng nó vẫn là thứ nằm ngoài tầm kiểm soát của chúng ta.

47
00:02:31,120 --> 00:02:35,615
Chúng tôi đã không viết tìm nạp, đây là một hàm che một loạt các JavaScript

48
00:02:35,615 --> 00:02:39,989
hoạt động, chúng ta sẽ thấy điều đó trong giây lát và một loạt các trình duyệt web hoạt động.

49
00:02:39,989 --> 00:02:43,115
Và nhân tiện, chúng tôi hy vọng với cách tìm nạp,

50
00:02:43,115 --> 00:02:46,837
tìm nạp là tính năng mới này của trình duyệt và của JavaScript,

51
00:02:46,837 --> 00:02:51,690
chúng tôi hy vọng nó sẽ trả lại cho chúng tôi dữ liệu từ Twitter và hy vọng một tweet.

52
00:02:51,690 --> 00:02:54,660
Điều đó khá rõ ràng, đó là những gì chúng tôi hy vọng nó sẽ làm được.

53
00:02:54,660 --> 00:02:58,419
Được rồi, hãy tìm nạp chức năng đầu tiên, hãy bắt đầu làm việc.

54
00:02:58,419 --> 00:03:00,851
Chúng tôi sẽ cố gắng hoàn thiện hết mức có thể ở đây và

55
00:03:00,851 --> 00:03:02,680
đây là nơi mà những suy nghĩ trở nên phức tạp.

56
00:03:02,680 --> 00:03:07,700
Vì vậy, dữ liệu trong tương lai sẽ là giá trị trả về trong

57
00:03:07,700 --> 00:03:14,136
JavaScript của tìm nạp cuộc gọi, tính năng trình duyệt web mới này

58
00:03:14,136 --> 00:03:19,570
có nhãn JavaScript cho đối tượng địa lý.

59
00:03:19,570 --> 00:03:22,350
Nhãn trong JavaScript được gọi là tìm nạp.

60
00:03:22,350 --> 00:03:26,520
Ai biết được, tính năng của trình duyệt web là gì,

61
00:03:26,520 --> 00:03:30,220
tìm nạp bắt đầu hay bắt đầu?

62
00:03:30,220 --> 00:03:31,390
Vì nó không được gọi là tìm nạp.

63
00:03:31,390 --> 00:03:33,880
Ai biết tính năng của trình duyệt web được gọi là gì?

64
00:03:33,880 --> 00:03:34,569
>> Paul: xhr.

65
00:03:34,569 --> 00:03:35,225
>> Will Sentance: Đó là xhr, tốt

66
00:03:35,225 --> 00:03:35,734
Paul thực hiện.

67
00:03:35,734 --> 00:03:38,660
Đó là XMLHttpRequest.

68
00:03:38,660 --> 00:03:41,710
Chúng ta sẽ thấy điều đó có nghĩa là gì trong một giây nữa,

69
00:03:41,710 --> 00:03:44,150
có vẻ như, chúng ta sẽ xem mỗi từ đó có nghĩa là gì.

70
00:03:44,150 --> 00:03:48,430
Thành thật mà nói, tất cả chúng đều là viết tắt của những thứ, XML, HTTP, đều là những từ mới.

71
00:03:49,680 --> 00:03:50,680
Yêu cầu rõ ràng là không.

72
00:03:50,680 --> 00:03:52,880
Tuy nhiên, điều đó sẽ rất thú vị nếu có.

73
00:03:52,880 --> 00:03:53,729
Có thể nó là.

74
00:03:53,729 --> 00:03:58,074
Có thể request là một từ viết tắt. >> Will Sentance: Được rồi, tốt, vậy

75
00:03:58,074 --> 00:04:01,240
điều này sẽ làm một cái gì đó trong JavaScript ngay lập tức.

76
00:04:01,240 --> 00:04:05,370
Đặt hẹn giờ, nó không, đặt hẹn giờ chỉ xoay vòng tính năng trình duyệt web của chúng tôi.

77
00:04:05,370 --> 00:04:09,090
Anh chàng nhỏ bé này ở đây, tìm nạp, mặc dù sẽ làm rất nhiều thứ trong JavaScript.

78
00:04:09,090 --> 00:04:16,060
Nó sẽ ngay lập tức trả về một đối tượng,

79
00:04:16,060 --> 00:04:21,240
ngay lập tức trả lại đối tượng với một tài sản

80
00:04:21,240 --> 00:04:26,090
trên nó được gọi là giá trị, không được xác định.

81
00:04:26,090 --> 00:04:32,700
Đây là nơi kết quả của dữ liệu này hoặc kết quả của công việc nền của tìm nạp

82
00:04:32,700 --> 00:04:37,430
sẽ lưu trữ giá trị kết quả của chúng tôi từ công việc nền, khi nó quay trở lại.

83
00:04:37,430 --> 00:04:41,070
Công việc nền đang nói với máy chủ của Twitter, mang lại một tweet.

84
00:04:41,070 --> 00:04:42,260
Điều đó sẽ được điền vào đây.

85
00:04:44,630 --> 00:04:49,184
Nó cũng có một thuộc tính trên đó, đó là một thuộc tính ẩn được gọi là sự hoàn thành.

86
00:04:50,870 --> 00:04:54,882
Đó là một mảng, một danh sách, một mảng trống,

87
00:04:54,882 --> 00:04:58,786
vào đó chúng tôi có thể gắn bất kỳ chức năng nào, nhưng

88
00:04:58,786 --> 00:05:03,572
chúng tôi cũng muốn kích hoạt khi giá trị được cập nhật.

89
00:05:03,572 --> 00:05:05,665
Thiết kế của vật thể đặc biệt này,

90
00:05:05,665 --> 00:05:09,372
loại đối tượng mới trong JavaScript được gọi là đối tượng hứa hẹn.

91
00:05:09,372 --> 00:05:13,677
Thiết kế của nó sao cho khi giá trị của nó được lấp đầy,

92
00:05:13,677 --> 00:05:19,630
thì nó sẽ kích hoạt tất cả các chức năng trong mảng này trên mảng thực hiện.

93
00:05:19,630 --> 00:05:25,470
Bây giờ, lý do chúng tôi muốn làm điều đó là sự trở lại này

94
00:05:25,470 --> 00:05:31,024
đối tượng dot sẽ được lưu trữ trong dữ liệu trong tương lai.

95
00:05:31,024 --> 00:05:34,944
Sunni, sự trở lại của đối tượng đó từ việc gọi tìm nạp sẽ được lưu trữ ở đâu?

96
00:05:34,944 --> 00:05:36,540
>> Sunni: Tìm nạp dữ liệu.

97
00:05:36,540 --> 00:05:39,520
Tôi xin lỗi, dữ liệu trong tương lai. >> Will Sentance: Dữ liệu tương lai, chính xác.

98
00:05:40,690 --> 00:05:44,940
Vì vậy, chúng tôi có thể nghĩ rằng tôi có thể hiển thị futureData.value.

99
00:05:46,100 --> 00:05:50,770
Nhưng vấn đề là tôi không biết khi nào giá trị đó sẽ được cập nhật.

100
00:05:50,770 --> 00:05:54,770
Vì vậy, không có cách nào trong mã thông thường của tôi, tôi có thể viết futureData.value,

101
00:05:54,770 --> 00:05:57,320
và sau đó đó sẽ là tweet trở lại của tôi.

102
00:05:57,320 --> 00:06:00,570
Ví dụ: nói xin chào, rồi chạy hiển thị trên đó.

103
00:06:00,570 --> 00:06:01,780
Nhưng đó là mục tiêu của tôi.

104
00:06:01,780 --> 00:06:04,870
Tôi chỉ trả lại dữ liệu, vì vậy tôi có thể chạy chức năng trên đó.

105
00:06:04,870 --> 00:06:07,560
Vì vậy, nếu tôi không biết khi nào dữ liệu đó sẽ quay trở lại,

106
00:06:07,560 --> 00:06:11,640
Tôi không thể trong chuỗi mã đồng bộ được đặt hàng thông thường của mình,

107
00:06:11,640 --> 00:06:16,990
hiển thị và chuyển vào futureData.value, vì tôi không biết giá trị là khi nào.

108
00:06:16,990 --> 00:06:20,615
Tôi có thể cố gắng và tiếp tục viết như thế cho đến tận cùng đoạn mã của mình

109
00:06:20,615 --> 00:06:27,460
display (futureData.value), sẽ là giá trị được đưa vào.

110
00:06:27,460 --> 00:06:29,130
Nhưng khi nào tôi có thể chạy cái này?

111
00:06:29,130 --> 00:06:30,550
Tôi không bao giờ biết ngày đó sẽ trở lại.

112
00:06:31,830 --> 00:06:35,380
Vì vậy, nếu tôi muốn chạy chức năng trên dữ liệu của mình khi dữ liệu quay trở lại

113
00:06:35,380 --> 00:06:40,300
công việc nền, nơi duy nhất tôi biết rằng giá trị chắc chắn được điền vào,

114
00:06:40,300 --> 00:06:42,480
nơi duy nhất nó thực sự chắc chắn biết là vật thể này.

115
00:06:43,490 --> 00:06:46,970
Vì vậy, chúng ta sẽ đính kèm các hàm đối tượng đó vào mảng này.

116
00:06:46,970 --> 00:06:48,590
Bạn sẽ đẩy họ vào mảng đó.

117
00:06:48,590 --> 00:06:50,720
Điều đó sẽ được tự động kích hoạt.

118
00:06:50,720 --> 00:06:51,920
Khi giá trị được cập nhật.

119
00:06:53,120 --> 00:06:55,340
Xem nó có cảm giác rất giống với những gì chúng tôi đã làm trước đây một cách trung thực.

120
00:06:56,340 --> 00:06:57,930
Chúng tôi sẽ không thể làm điều này,

121
00:06:57,930 --> 00:07:00,800
vì tôi vẫn không biết khi nào giá trị đó sẽ được cập nhật.

122
00:07:00,800 --> 00:07:04,120
Vì vậy, nơi duy nhất tôi biết chắc chắn rằng giá trị đã được cập nhật,

123
00:07:04,120 --> 00:07:08,620
lần duy nhất tôi biết chắc chắn là trên đối tượng này khi giá trị đó được điền vào và

124
00:07:08,620 --> 00:07:10,990
sau đó tự động kích hoạt tất cả các chức năng này để chạy.

125
00:07:10,990 --> 00:07:14,970
Và đó chính là thiết kế của đối tượng này, đối tượng hứa hẹn mới này trong JavaScript.

126
00:07:14,970 --> 00:07:17,760
Khi giá trị được cập nhật, hãy kích hoạt tất cả các chức năng của tôi.

127
00:07:17,760 --> 00:07:20,820
Nhân tiện, với giá trị, khi các hàm đó đầu vào.

128
00:07:20,820 --> 00:07:23,700
Hiện tại chúng ta không có chức năng nào trong đó, nhưng chúng ta nên thêm một số chức năng vào.

129
00:07:23,700 --> 00:07:26,489
Vì vậy, đó là đối tượng đi ra.

130
00:07:26,489 --> 00:07:30,523
Nó được biết đến như một đối tượng hứa hẹn,

131
00:07:30,523 --> 00:07:35,848
thông minh. >> Will Sentance: Vì vậy,

132
00:07:35,848 --> 00:07:41,560
và điều đó được lưu trữ, như Sonia đã nói đúng, vào dữ liệu trong tương lai.

133
00:07:41,560 --> 00:07:44,780
Nó có trong dữ liệu tương lai.

134
00:07:44,780 --> 00:07:47,370
Nó có một thuộc tính giá trị, không được xác định.

135
00:07:47,370 --> 00:07:50,419
Về cơ bản, nó có hai trình giữ chỗ, hai thứ đang chờ đợi.

136
00:07:51,470 --> 00:07:55,030
Và nó có một thuộc tính ẩn được gọi là khi hoàn thành,

137
00:07:55,030 --> 00:08:00,150
về cơ bản đó là một danh sách mà chúng tôi có thể đặt bất kỳ chức năng nào chúng tôi muốn để tự động kích hoạt

138
00:08:00,150 --> 00:08:01,840
khi giá trị được cập nhật.

139
00:08:01,840 --> 00:08:05,730
Và giá trị sẽ được cập nhật, khi tính năng trình duyệt web của chúng tôi lấy lại kết quả.

140
00:08:05,730 --> 00:08:11,983
Vì vậy, chúng ta hãy hy vọng cũng tìm nạp những gì, là hai hướng Nó cũng bắt đầu một nền

141
00:08:11,983 --> 00:08:16,429
đó là tính năng của trình duyệt web, Paul? >> Paul: Yêu cầu HTTP XML.

142
00:08:16,429 --> 00:08:17,563
>> Will Sentance: Yêu cầu HTTP XML,

143
00:08:17,563 --> 00:08:18,380
thông minh.

144
00:08:18,380 --> 00:08:21,180
Vì vậy, nó có hai hệ quả, một trong JavaScript.

145
00:08:21,180 --> 00:08:23,360
Tôi thậm chí có thể viết điều đó thực sự.

146
00:08:23,360 --> 00:08:30,630
Một trong JavaScript và một trong trình duyệt web,

147
00:08:30,630 --> 00:08:36,760
một trong trình duyệt web, trình duyệt web.

148
00:08:36,760 --> 00:08:40,924
Điều đó chính xác như Paul đã nói,

149
00:08:40,924 --> 00:08:46,790
Yêu cầu HTTP XML, nghĩa là gì?

150
00:08:46,790 --> 00:08:51,600
XML là dữ liệu trước đây mà chúng ta sẽ truy cập và lấy từ Internet,

151
00:08:51,600 --> 00:08:54,070
khi chúng tôi xử lý nội dung trình duyệt web.

152
00:08:54,070 --> 00:08:57,730
HTTP là giao thức, P là viết tắt của giao thức.

153
00:08:57,730 --> 00:09:01,670
Điều đó có nghĩa là các quy tắc của trò chơi về cách chúng ta có thể đi và nhận được và

154
00:09:01,670 --> 00:09:07,394
mang lại dữ liệu qua web và yêu cầu là yêu cầu,

155
00:09:07,394 --> 00:09:10,560
đi và lấy dữ liệu, tốt.

156
00:09:10,560 --> 00:09:14,530
Vì vậy, chúng ta hãy theo dõi hai điều, chúng ta hãy theo dõi nó ở đây.

157
00:09:14,530 --> 00:09:19,190
Vì vậy, xhr là tính năng trình duyệt web mà chúng tôi đang sử dụng.

158
00:09:19,190 --> 00:09:21,480
Đó là công việc, đó là một tính năng đặc biệt của trình duyệt,

159
00:09:21,480 --> 00:09:22,590
tính năng quan trọng nhất của tất cả.

160
00:09:23,650 --> 00:09:24,210
Khá rõ ràng, phải không?

161
00:09:24,210 --> 00:09:25,590
Đó là một trong những nói với internet.

162
00:09:25,590 --> 00:09:26,719
Đó là công việc.

163
00:09:26,719 --> 00:09:27,780
Vì vậy, nó xoay một cái lên.

164
00:09:27,780 --> 00:09:33,605
Thông tin nào nó cần biết,

165
00:09:33,605 --> 00:09:36,090
Ben? >> Ben: URL.

166
00:09:36,090 --> 00:09:37,160
>> Will Sentance: URL, tuyệt vời,

167
00:09:37,160 --> 00:09:37,950
cảm ơn bạn, Ben.

168
00:09:37,950 --> 00:09:43,970
URL, là Twitter.com, và cũng là đường dẫn / will.

169
00:09:43,970 --> 00:09:46,482
Ngoài ra, điều khác nó cần biết là gì,

170
00:09:46,482 --> 00:09:50,648
Ben? >> Will Sentance: Tìm hiểu mọi người về nó,

171
00:09:50,648 --> 00:09:53,142
thực ra, có ai biết không, James? >> James: Phương pháp.

172
00:09:53,142 --> 00:09:54,352
>> Will Sentance: Phương thức, được lấy,

173
00:09:54,352 --> 00:09:58,163
nghĩa là nó sẽ nhận được một số dữ liệu, không phải gửi hoặc đăng như một tweet mới,

174
00:09:58,163 --> 00:10:00,200
nó sẽ nhận lại các tweet.

175
00:10:00,200 --> 00:10:03,260
Và tìm mọi người để có được, bạn nhé.

176
00:10:03,260 --> 00:10:05,850
Nó đã hoàn thành chưa, Ben? >> Ben: Không.

177
00:10:05,850 --> 00:10:06,775
>> Will Sentance: Chắc chắn là không, phải không,

178
00:10:06,775 --> 00:10:08,549
1 phần nghìn giây, chúng ta đang ở 1 phần nghìn giây ở đây.

179
00:10:10,350 --> 00:10:13,940
Nó chắc chắn hoàn thành một phần nghìn giây, phải không?

180
00:10:13,940 --> 00:10:16,480
Nó sẽ, giả sử 200 mili giây, nó sẽ mất hoặc tương tự như vậy.

181
00:10:16,480 --> 00:10:20,710
Khi hoàn thành, và đây là phần khó khăn, khi hoàn thành, Ben,

182
00:10:20,710 --> 00:10:25,750
chúng ta muốn cái này làm gì?

183
00:10:25,750 --> 00:10:27,220
Sau khi hoàn thành khi họ quay lại,

184
00:10:27,220 --> 00:10:29,720
chúng ta muốn làm gì với dữ liệu đó? >> Ben: Chúng tôi muốn

185
00:10:29,720 --> 00:10:34,020
gán dữ liệu phản hồi cho giá trị? >> Will Sentance: Anh ấy nói đúng?

186
00:10:34,020 --> 00:10:35,010
Anh ấy đang ở đúng chỗ.

187
00:10:35,010 --> 00:10:36,960
Trên đối tượng nào? >> Ben: Giá trị.

188
00:10:36,960 --> 00:10:39,940
Đối tượng hứa hẹn. >> Will Sentance: Cái nào được gọi là?

189
00:10:39,940 --> 00:10:40,690
>> Ben: Dữ liệu trong tương lai.

190
00:10:40,690 --> 00:10:41,545
>> Will Sentance: Xuất sắc từ Ben.

191
00:10:41,545 --> 00:10:46,206
Chúng tôi sẽ cập nhật futureData.value,

192
00:10:46,206 --> 00:10:52,105
sẽ là bất kỳ dữ liệu nào chúng tôi nhận được từ tin nhắn của mình.

193
00:10:52,105 --> 00:10:59,330
Thông điệp HTTP của chúng tôi tới Twitter.

194
00:10:59,330 --> 00:11:01,020
Đây rồi, Twitter.

195
00:11:01,020 --> 00:11:02,670
Đối với máy tính của họ.

196
00:11:02,670 --> 00:11:04,600
Khi dữ liệu đó quay trở lại,

197
00:11:04,600 --> 00:11:09,520
nó sẽ điền vào thuộc tính giá trị của đối tượng dữ liệu trong tương lai của chúng ta,

198
00:11:09,520 --> 00:11:12,300
sau đó sẽ làm gì, Ben? >> Ben: Nó sẽ

199
00:11:12,300 --> 00:11:14,905
kích hoạt các chức năng thực hiện? >> Will Sentance: Tất cả các chức năng trong

200
00:11:14,905 --> 00:11:15,640
mảng thực hiện.

201
00:11:15,640 --> 00:11:19,220
Chính xác. >> Will Sentance: Rất tốt.

202
00:11:19,220 --> 00:11:20,030
Rất tốt.

203
00:11:20,030 --> 00:11:25,560
Chúng ta có thể nói về mặc dù phân đoạn tìm nạp duy nhất đó đang hoạt động như thế nào không?

204
00:11:25,560 --> 00:11:30,982
Đây là một chức năng mặt tiền hai mũi nhọn, không chỉ hoạt động trong trình duyệt web,

205
00:11:30,982 --> 00:11:33,588
nó cũng thực hiện nhiều thứ bằng JavaScript.

206
00:11:33,588 --> 00:11:38,223
Vì vậy, chúng tôi có sẵn trong JavaScript một khoảng trống nhỏ để hàm của chúng tôi,

207
00:11:38,223 --> 00:11:41,473
trong đó giá trị trả về của chúng tôi, đối tượng phản hồi của chúng tôi.

208
00:11:41,473 --> 00:11:45,317
Đó là phản hồi mà chúng tôi nhận được khi nói chuyện với Twitter dưới dạng một đối tượng,

209
00:11:45,317 --> 00:11:47,500
sẽ được lưu trữ trong tài sản giá trị đó.

210
00:11:47,500 --> 00:11:48,690
Ngay bây giờ nó vẫn chưa được xác định.

211
00:11:48,690 --> 00:11:50,210
Ngay bây giờ chúng tôi thậm chí chưa nói những gì chúng tôi sẽ kích hoạt.

212
00:11:51,300 --> 00:11:53,200
Nhưng chúng tôi sẽ làm trong giây lát.

213
00:11:53,200 --> 00:11:56,940
Được rồi, tuyệt vời, công cụ tính năng của trình duyệt đã hoàn thành.

214
00:11:56,940 --> 00:11:58,630
Đó là những gì tìm nạp đã thiết lập.

215
00:11:58,630 --> 00:12:02,170
Nội dung JavaScript trả về dữ liệu trong tương lai ngay lập tức.

216
00:12:02,170 --> 00:12:07,110
Và vì vậy chúng tôi có thể chuyển sang dòng tiếp theo trong chuỗi JavaScript của chúng tôi,

217
00:12:07,110 --> 00:12:09,850
mà nói để làm gì, Ban phước?

218
00:12:09,850 --> 00:12:12,958
Chúng tôi đã làm dữ liệu trong tương lai, với giá trị trả về là tìm nạp,

219
00:12:12,958 --> 00:12:15,089
là đối tượng sa khoáng đối tượng.

220
00:12:15,089 --> 00:12:17,962
Dòng tiếp theo của chúng ta là gì, Blessing? >> Blessing: Tính linh hoạt được đánh bài trên

221
00:12:17,962 --> 00:12:20,500
dữ liệu trong tương lai. >> Will Sentance: Xuất sắc.

222
00:12:20,500 --> 00:12:26,570
Phương thức tên yêu thích nhất của tôi trong JavaScript, .then.

223
00:12:26,570 --> 00:12:29,110
Mọi thứ nó đang làm đều cho bạn biết,

224
00:12:29,110 --> 00:12:33,950
rằng đó là công việc bằng cách nào đó, tôi thực sự không thích nó, nó khiến mọi người

225
00:12:33,950 --> 00:12:39,130
nghĩ rằng bằng cách nào đó chúng ta sẽ quay lại dòng đó và sau đó hiển thị cuộc gọi.

226
00:12:39,130 --> 00:12:43,800
Về cơ bản là không làm như vậy, sau đó làm cái gì?

227
00:12:44,940 --> 00:12:50,100
Chà, Ben, chúng ta đặt các chức năng ở đâu

228
00:12:50,100 --> 00:12:54,600
mà chúng tôi muốn được tự động kích hoạt, khi thuộc tính giá trị của dữ liệu trong tương lai

229
00:12:54,600 --> 00:12:57,870
được cập nhật từ công việc nền? >> Ben: Vào dữ liệu tương lai

230
00:12:57,870 --> 00:13:00,660
các đối tượng. >> Will Sentance: Xuất sắc.

231
00:13:00,660 --> 00:13:02,470
Làm thế nào để chúng tôi đưa chúng vào đó?

232
00:13:02,470 --> 00:13:06,150
Đó là công việc của chức năng được tích hợp sẵn này.

233
00:13:06,150 --> 00:13:08,860
Tôi không nhớ liệu hàm máy chủ có ngụ ý loại mặt tiền này cho

234
00:13:08,860 --> 00:13:10,250
trình duyệt web hoặc nếu không.

235
00:13:10,250 --> 00:13:14,620
Đó là một loạt mã JavaScript được viết để làm điều này.

236
00:13:14,620 --> 00:13:18,910
Nó được ghi vào, vì vậy đây là dữ liệu trong tương lai, đối tượng này ở đây.

237
00:13:18,910 --> 00:13:22,380
Cùng một đối tượng chỉ cần chúng tôi chuyển nó ra và chúng tôi lưu trữ nó trong dữ liệu trong tương lai.

238
00:13:22,380 --> 00:13:28,690
Nó có một thuộc tính được gọi là hoàn thành, là một mảng trống.

239
00:13:28,690 --> 00:13:32,920
Tất cả những gì sau đó làm, nó nói bất cứ điều gì bạn chuyển cho tôi bất kỳ chức năng nào

240
00:13:32,920 --> 00:13:35,700
định nghĩa, chúng tôi không chạy màn hình ở đây.

241
00:13:35,700 --> 00:13:38,420
Biểu tượng nào cho tôi biết tôi đang chạy một hàm, Josh cái gì

242
00:13:38,420 --> 00:13:40,789
biểu tượng đặc biệt nói rằng chạy một chức năng? >> Josh: Dấu ngoặc đơn.

243
00:13:40,789 --> 00:13:41,453
>> Di chúc: Dấu ngoặc đơn,

244
00:13:41,453 --> 00:13:43,960
Tôi không thấy dấu ngoặc ở đây, vì vậy chúng tôi không chạy màn hình.

245
00:13:43,960 --> 00:13:49,190
Tất cả những gì chúng ta đang làm là định nghĩa toàn bộ hàm vào mảng đó.

246
00:13:49,190 --> 00:13:50,660
Đó là tất cả những gì sau đó đang làm.

247
00:13:50,660 --> 00:13:56,220
Sau đó, tôi sẽ thay thế tên bằng chức năng cửa hàng mà chúng tôi muốn tự động kích hoạt,

248
00:13:56,220 --> 00:13:57,590
về giá trị có thể đang được cập nhật.

249
00:13:57,590 --> 00:14:03,110
Nó không phải là một tên phương thức hấp dẫn, nhưng nó là một tên phương thức chính xác.

250
00:14:03,110 --> 00:14:07,606
Into it going, nghĩa là chúng tôi đưa vào

251
00:14:07,606 --> 00:14:13,520
mảng thực hiện, chức năng hiển thị.

252
00:14:13,520 --> 00:14:18,310
Điều đó có nghĩa là bây giờ khi giá trị của chúng tôi được cập nhật, chúng tôi sẽ gọi hiển thị và

253
00:14:18,310 --> 00:14:20,890
đầu vào của nó, đối số của nó.

254
00:14:20,890 --> 00:14:23,660
Ngay bây giờ, dữ liệu của thông số, sẽ bị loại bỏ và

255
00:14:23,660 --> 00:14:26,450
được thay thế bằng bất kỳ giá trị nào.

256
00:14:27,540 --> 00:14:30,890
Và làm thế nào để chúng ta có được chức năng hiển thị đó trong danh sách các chức năng trên.

257
00:14:30,890 --> 00:14:32,040
Làm thế nào để chúng tôi có được nó trong đó?

258
00:14:32,040 --> 00:14:34,890
Sử dụng phương pháp then.

259
00:14:34,890 --> 00:14:39,140
Bất cứ điều gì bạn vượt qua vì phương pháp của họ sẽ được đưa vào

260
00:14:39,140 --> 00:14:42,410
đối tượng ở bên tay trái trên mảng thực hiện.

261
00:14:42,410 --> 00:14:43,260
Chờ một chút, Josh.

262
00:14:45,130 --> 00:14:48,220
Được rồi, nó gắn chức năng hiển thị với dữ liệu trong tương lai.

263
00:14:48,220 --> 00:14:53,600
Nó hoàn toàn không phải nói, chạy hiển thị ngay bây giờ.

264
00:14:53,600 --> 00:14:55,960
Cảm giác rất nhiều, ý tôi là bạn nhìn vào cái này và

265
00:14:55,960 --> 00:14:59,120
rất tốt, dữ liệu trong tương lai sẽ quay trở lại và sau đó chúng ta cần chạy hiển thị.

266
00:15:00,350 --> 00:15:04,860
Vâng, về lý thuyết, theo nghĩa ẩn dụ rộng hơn là có.

267
00:15:04,860 --> 00:15:09,110
Nhưng không, những gì chúng tôi thực sự đang làm là chúng tôi tham gia vào tương lai

268
00:15:09,110 --> 00:15:12,730
một đối tượng hứa hẹn có thuộc tính giá trị chưa được điền vào.

269
00:15:12,730 --> 00:15:15,170
Khi nó được điền vào, chúng tôi sẽ kích hoạt tất cả các chức năng này.

270
00:15:15,170 --> 00:15:16,470
Làm thế nào để chúng ta có được các chức năng trong đó?

271
00:15:16,470 --> 00:15:19,780
Sử dụng phương thức then trên đối tượng futureData.

272
00:15:19,780 --> 00:15:25,076
Được rồi, có nghĩa là bây giờ chúng ta có thể tiếp tục với mã đồng bộ của mình và

273
00:15:25,076 --> 00:15:29,971
ở mức 2 mili giây, những gì chúng tôi đã làm cho bạn hôm nay. sau đó, dòng nào của

274
00:15:29,971 --> 00:15:34,426
chúng ta đạt được mã ở 2 mili giây, Bryan? >> Brian: Console.log.

275
00:15:34,426 --> 00:15:35,176
>> Will Sentance: Console.log, vâng.

276
00:15:35,176 --> 00:15:35,955
>> Brian: Tôi trước.

277
00:15:35,955 --> 00:15:36,959
>> Will Sentance: Console.log cho tôi trước,

278
00:15:36,959 --> 00:15:37,498
thông minh.

279
00:15:37,498 --> 00:15:42,680
Console.log cho tôi trước.

280
00:15:42,680 --> 00:15:44,480
Đó là 2 mili giây.

281
00:15:44,480 --> 00:15:46,890
Brian, chúng ta đã đạt được rất nhiều

282
00:15:46,890 --> 00:15:51,630
mục tiêu rất quan trọng là có thể thiết lập các nhiệm vụ mất nhiều thời gian, nhưng

283
00:15:51,630 --> 00:15:53,690
tiếp tục mã JavaScript thông thường của chúng tôi? >> Brian: Vâng.

284
00:15:53,690 --> 00:15:54,470
>> Will Sentance: Theo cách không chặn.

285
00:15:54,470 --> 00:15:55,270
Tuyệt vời, chúng tôi có.

286
00:15:55,270 --> 00:15:55,770
Bạn đang ở đúng chỗ.

287
00:15:56,880 --> 00:16:00,480
Sau 2 mili giây, chúng tôi tiếp tục với mã của mình.

288
00:16:00,480 --> 00:16:05,020
Được rồi, và bây giờ trong JavaScript, chúng ta đã khá rõ ràng.

289
00:16:05,020 --> 00:16:06,430
Thành thật mà nói, chúng tôi khá rõ ràng ngay bây giờ.

290
00:16:07,520 --> 00:16:15,260
Được rồi, nhưng trong tính năng trình duyệt web nền của chúng tôi, một thế giới nội dung đang diễn ra.

291
00:16:15,260 --> 00:16:22,197
Máy chủ của Twitter đang gửi lại cho chúng tôi phản hồi có thể là 201 mili giây,

292
00:16:22,197 --> 00:16:26,657
thứ gì đó tương tự, cộng với 200 mili giây,

293
00:16:28,644 --> 00:16:32,577
>> Will Sentance: Điều đó đến, phản hồi của chúng tôi

294
00:16:32,577 --> 00:16:39,380
đó là câu trả lời đơn giản nhất của tôi.

295
00:16:39,380 --> 00:16:43,366
Bây giờ rõ ràng, nó quay trở lại, thực sự rõ ràng, khi nó đến

296
00:16:43,366 --> 00:16:47,800
trở lại dưới dạng một đối tượng khi chúng ta phải đi vào và tìm giá trị thực trong phần thân.

297
00:16:47,800 --> 00:16:51,080
Nhưng chúng tôi sẽ đơn giản hóa nó và nói rằng nó sẽ trở lại như một chuỗi ký tự đẹp, hi.

298
00:16:51,080 --> 00:16:56,850
Vì vậy, Rick tại thời điểm đó,

299
00:16:56,850 --> 00:17:02,965
nếu chúng tôi vừa lấy lại chủ đề phản hồi thì có nhiệm vụ xhr nền của chúng tôi,

300
00:17:02,965 --> 00:17:04,685
yêu cầu dữ liệu, chúng tôi đã lấy lại dữ liệu.

301
00:17:04,685 --> 00:17:05,255
Nó đã hoàn thành chưa?

302
00:17:06,725 --> 00:17:07,305
>> Rick: Vâng. >> Will Sentance: Nó có

303
00:17:07,305 --> 00:17:08,795
hoàn thành, tại chỗ.

304
00:17:08,795 --> 00:17:10,735
Nó đã hoàn thành và như vậy, Ben,

305
00:17:10,735 --> 00:17:15,565
chúng ta sẽ kích hoạt điều gì xảy ra? >> Rick: Chúng tôi sẽ chỉ định

306
00:17:15,565 --> 00:17:19,055
chuỗi đó thành futureData.value. >> Will Sentance: Tuyệt vời,

307
00:17:19,055 --> 00:17:21,045
giao tiếp rất tốt, vâng, chính xác.

308
00:17:21,045 --> 00:17:24,826
Nghĩa là. >> Will Sentance: Chúng ta sẽ làm gì

309
00:17:24,826 --> 00:17:26,420
kích hoạt chạy?

310
00:17:26,420 --> 00:17:30,260
Chúc phúc, hãy đơn giản nhất có thể ở đây, chúng ta sẽ kích hoạt những gì

311
00:17:30,260 --> 00:17:30,760
điểm này? >> Ban phước: Được rồi,

312
00:17:30,760 --> 00:17:34,050
bây giờ giá trị đã quay trở lại, chúng tôi sẽ kích hoạt chức năng hiển thị.

313
00:17:34,050 --> 00:17:34,680
>> Di chúc: Chính xác,

314
00:17:34,680 --> 00:17:38,590
bây giờ chúng tôi sẽ giữ lại, bây giờ chúng tôi chỉ nói rằng chúng tôi sẽ kích hoạt nó.

315
00:17:38,590 --> 00:17:42,940
Chúng tôi quay lại với tốc độ khoảng 201 mili giây.

316
00:17:44,630 --> 00:17:49,160
Chúng tôi sẽ kích hoạt nó chạy ở 200 mili giây.

317
00:17:49,160 --> 00:17:50,310
Chúng tôi sẽ khám phá,

318
00:17:50,310 --> 00:17:54,470
chúng tôi có thực sự nghĩ rằng JavaScript sẽ cho phép chức năng đó hoạt động trở lại không?

319
00:17:54,470 --> 00:17:56,750
Hay sẽ có một số bước trung gian?

320
00:17:56,750 --> 00:18:03,080
Có thể, nhưng bây giờ chúng ta chỉ cần nói, chúng tôi kích hoạt màn hình đang chạy, với hi, phải không?

321
00:18:03,080 --> 00:18:05,250
Chúng tôi nhìn vào màn hình hiển thị chức năng mà chúng tôi đang kích hoạt.

322
00:18:05,250 --> 00:18:07,600
Chúng tôi thấy thông số của nó là dữ liệu.

323
00:18:07,600 --> 00:18:08,290
Chúng ta gọi nó.

324
00:18:08,290 --> 00:18:11,690
Dữ liệu tham số được thay thế bằng giá trị,

325
00:18:11,690 --> 00:18:13,860
Victor? >> Victor: Xin chào.

326
00:18:13,860 --> 00:18:14,640
>> Will Sentance: Xin chào, xuất sắc.

327
00:18:15,730 --> 00:18:22,140
Tuyệt vời, và do đó trong bộ nhớ của chúng tôi, chúng tôi có dữ liệu tham số với một giá trị, xin chào.

328
00:18:22,140 --> 00:18:23,876
Và sẽ truy cập console.log,

329
00:18:23,876 --> 00:18:27,740
ở 201 mili giây. >> Will Sentance: Giá trị của chúng tôi.

330
00:18:30,845 --> 00:18:33,307
>> Will Sentance: Xin chào, đây là mọi người,

331
00:18:33,307 --> 00:18:37,378
trời ơi. >> Will Sentance: Chúng tôi đã đạt được ba

332
00:18:37,378 --> 00:18:42,541
mục tiêu, một, tập hợp các tác vụ cần nhiều thời gian trong trình duyệt web, hai tiếp tục

333
00:18:42,541 --> 00:18:48,400
chạy qua mã JavaScript, nó đánh tôi đầu tiên, không vấn đề gì, không bị chặn.

334
00:18:48,400 --> 00:18:54,040
Thứ ba, khi dữ liệu đó quay trở lại từ tác vụ nền,

335
00:18:54,040 --> 00:18:55,640
không nó sẽ hiển thị ở đâu và

336
00:18:55,640 --> 00:19:00,360
thì chức năng tự động kích hoạt tại thời điểm đó với đầu vào của dữ liệu đó.

337
00:19:01,660 --> 00:19:02,290
Tôi sẽ cho bạn biết điều này.

338
00:19:02,290 --> 00:19:05,260
Nhân tiện, nó trông rất giống với mô hình trước đó.

339
00:19:05,260 --> 00:19:06,560
Chúng ta vừa có một bước trung gian.

340
00:19:06,560 --> 00:19:10,090
Bây giờ chúng tôi chỉ cập nhật một giá trị trong JavaScript để tự động kích hoạt hàm.

341
00:19:10,090 --> 00:19:12,000
Trước đây, nếu bạn nhớ, với thời gian chờ đã đặt,

342
00:19:12,000 --> 00:19:15,180
chúng tôi chuyển một hàm trong đó sẽ được tự động kích hoạt với giá trị.

343
00:19:15,180 --> 00:19:18,720
Bây giờ chúng ta chuyển một tham chiếu đến một vị trí trong bộ nhớ JavaScript,

344
00:19:18,720 --> 00:19:21,390
một thuộc tính giá trị được điền vào khi hoàn thành.

345
00:19:21,390 --> 00:19:23,770
Và đó là những gì kích hoạt hàm để gọi.

346
00:19:24,880 --> 00:19:27,510
Tôi không biết.

347
00:19:27,510 --> 00:19:29,020
Cải thiện khả năng đọc có thể.